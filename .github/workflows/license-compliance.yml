name: 05 License Compliance

on:
  workflow_dispatch:
  workflow_call:

jobs:
  license-finder:
    runs-on: ubuntu-latest
    steps:
      # Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'

      # Instalar dependencias
      - name: Install dependencies api
        run: |
          cd inclusionlectora_api
          npm install

      # Instalar license-checker
      - name: Install License Checker
        run:  |
          cd inclusionlectora_api
          npm install -g license-checker

      # Ejecutar análisis de licencias
      - name: Run License Compliance Check
        id: license-check
        run: |
          cd inclusionlectora_api
          license-checker --production --json > license_report.json
          echo "License compliance check completed"

       # Instalar dependencias
      - name: Install dependencies api
        run: |
          cd inclusionlectora_web
          npm install

      # Instalar license-checker
      - name: Install License Checker api
        run: |
          cd inclusionlectora_web
          npm install -g license-checker

      # Ejecutar análisis de licencias
      - name: Run License Compliance Check api
        id: license-check
        run: |
           cd inclusionlectora_web
          license-checker --production --json > license_report.json
          echo "License compliance check completed"

      # Validar contra licencias permitidas
      - name: Validate Licenses
        run: |
            node -e "
            const fs = require('fs');
            const ignoredPackages = ['uglify-js', 'tslib'];
            const permittedLicenses = ['MIT', 'Apache-2.0', 'ISC', 'BSD-3-Clause', 'BSD-2-Clause', 'UNLICENSED', 'Custom', 'BSD-3-Clause OR MIT', 'BSD'];
            const report = JSON.parse(fs.readFileSync('license_report.json', 'utf-8'));
            const invalid = Object.entries(report).filter(([pkg, data]) => {
            const license = (data.licenses || '').replace('*', '').trim();
            return !permittedLicenses.includes(license) && !ignoredPackages.some(p => pkg.includes(p));
            });
            if (invalid.length) {
            console.error('Found invalid licenses:');
            invalid.forEach(([pkg, data]) => console.error(\`\${pkg}: \${data.licenses}\`));
            process.exit(1);
            } else {
            console.log('All licenses are compliant.');
            }"

      # Subir reporte de licencias como artefacto
      - name: Upload License Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: license-compliance-report
          path: license_report.json